<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notas de Cloud y DevOps</title><link>https://blog.okelet.com/</link><atom:link href="https://blog.okelet.com/index.xml" rel="self" type="application/rss+xml"/><description>Notas de Cloud y DevOps</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>es-ES</language><copyright>[CC BY-SA](https://creativecommons.org/licenses/by-sa/3.0/) Juan A. S. 2020</copyright><lastBuildDate>Tue, 01 Jan 2019 00:00:00 +0000</lastBuildDate><image><url>img/map[gravatar:%!s(bool=false) shape:circle]</url><title>Notas de Cloud y DevOps</title><link>https://blog.okelet.com/</link></image><item><title>Instalación y configuración de Windows Terminal y Powershell</title><link>https://blog.okelet.com/post/2020/02/instalacion-y-configuracion-de-windows-terminal-y-powershell/</link><pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2020/02/instalacion-y-configuracion-de-windows-terminal-y-powershell/</guid><description>
&lt;p>Microsoft se está poniendo un poco las pilas, y entre otros muchos proyectos, lanzó hace unos meses
&lt;a href="https://github.com/microsoft/terminal" target="_blank" rel="noopener">Windows Terminal&lt;/a>, una nueva terminal en Windows con unas funcionalidades que eran necesarias desde hace mucho tiempo (pestañas, perfiles, integración con WSL, soporte Unicode y UTF-8, temas, estilos, etc.).&lt;/p>
&lt;p>Aunque no uso mucho Windows, en ocasiones tengo que iniciarlo, y determinadas tareas de consola se hacen bastante pesadas. Con Windows Terminal, la verdad es que la sensación a la hora de trabajar es bastante cómoda. Por eso, he decidido crear este post para futuras referencias, así como con instrucciones para instalar utilidades útiles a la hora de usar Windows Terminal.&lt;/p>
&lt;p>En primer lugar, para instalar Windows Terminal, simplemente ejecutaremos este comando desde una consola de Powershell estándar, con permisos de administrador (teniendo
&lt;a href="https://chocolatey.org/" target="_blank" rel="noopener">el gestor de paquetes Chocolatey&lt;/a> instalado previamente):&lt;/p>
&lt;pre>&lt;code class="language-powershell">choco install microsoft-windows-terminal
&lt;/code>&lt;/pre>
&lt;p>Como alternativa, si no podemos instalar Windows Terminal porque el sistema no cumple los requisitos (es necesaria una compilación de Windows Windows 10 1903, build 18362, o posterior), podemos optar por usar
&lt;a href="https://conemu.github.io/" target="_blank" rel="noopener">ConEmu&lt;/a> o
&lt;a href="https://cmder.net/" target="_blank" rel="noopener">Cmder&lt;/a>:&lt;/p>
&lt;pre>&lt;code class="language-powershell">choco install conemu
choco install cmder
&lt;/code>&lt;/pre>
&lt;p>También instalaremos
&lt;a href="https://github.com/gerardog/gsudo" target="_blank" rel="noopener">gsudo&lt;/a>, que será necesario en pasos posteriores:&lt;/p>
&lt;pre>&lt;code class="language-powershell">choco install gsudo
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2020/02/instalacion-y-configuracion-de-windows-terminal-y-powershell/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Obtener la fecha de creación de las instancias de AWS EC2</title><link>https://blog.okelet.com/post/2020/02/obtener-la-fecha-de-creacion-de-las-instancias-de-aws-ec2/</link><pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2020/02/obtener-la-fecha-de-creacion-de-las-instancias-de-aws-ec2/</guid><description>
&lt;p>AWS, al listar las instancias de EC2, no devuelve ninguna propiedad que diga cuándo se creó una instancias; esto puede sernos útil en determinadas ocasiones. Podríamos pensar que nos podría valer la propiedad &amp;ldquo;LaunchTime&amp;rdquo;, pero eso en realidad nos indica cuándo se encendió por última vez la instancia, no cuándo se creó.&lt;/p>
&lt;p>Aunque directamente este dato no lo proporciona directamente AWS, podemos deducirlo indirectamente a través de otros parámetros:&lt;/p>
&lt;ul>
&lt;li>La fecha más antigua de vinculación de las tarjetas de red&lt;/li>
&lt;li>La fecha más antigua de vinculación de los discos&lt;/li>
&lt;/ul>
&lt;p>Esto debe ser válido, ya que por ejemplo,
&lt;a href="https://docs.amazonaws.cn/en_us/vpc/latest/userguide/VPC_ElasticNetworkInterfaces.html" target="_blank" rel="noopener">la tarjeta de red principal no se puede desvincular de la instancia&lt;/a> (&lt;span class="markup-quote">You cannot detach a primary network interface from an instance&lt;/span>), y su fecha de vinculación permanece siempre igual, aún entre reinicios. También suele ser válido que normalmente, el disco principal de una instancia no suele cambiar, aunque esto no siempre es cierto.&lt;/p>
&lt;p>Con estos datos, podemos lanzar una consulta de la CLI de AWS y mediante el parámetro &lt;code>query&lt;/code> (que es una expresión
&lt;a href="http://jmespath.org/" target="_blank" rel="noopener">JMESPath&lt;/a>), obtener dichos valores:&lt;/p>
&lt;pre>&lt;code class="language-bash">aws ec2 describe-instances --output table --query 'sort_by(Reservations[].Instances[?State.Name!=`terminated`][].{Name: Tags[?Key==`Name`].Value | [0], InstanceId: InstanceId, CreationTime: min([min(NetworkInterfaces[].Attachment.AttachTime), min(BlockDeviceMappings[].Ebs.AttachTime)]), State: State.Name, InstanceType: InstanceType, PublicIpAddress: PublicIpAddress, PrivateIpAddress: PrivateIpAddress}, &amp;amp;CreationTime)'
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2020/02/obtener-la-fecha-de-creacion-de-las-instancias-de-aws-ec2/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Configurar Microk8s para usar repositorios de AWS ECR</title><link>https://blog.okelet.com/post/2020/01/configurar-microk8s-para-usar-repositorios-de-aws-ecr/</link><pubDate>Sat, 18 Jan 2020 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2020/01/configurar-microk8s-para-usar-repositorios-de-aws-ecr/</guid><description>
&lt;p>Continuando con un post anterior de cómo
&lt;a href="https://blog.okelet.com/post/2019/06/probando-ansible-awx-con-microk8s/">probar Ansible AWX con Microk8s&lt;/a> (en AWS EC2). Bueno, pues resulta que me creé una imagen personalizada para el contener &lt;code>awx_task&lt;/code> para instalar una serie de librerías y comandos que necesitaba para lanzar unos playbooks; el fichero &lt;code>Dockerfile&lt;/code> es similar a éste:&lt;/p>
&lt;pre>&lt;code class="language-text">FROM ansible/awx_task:9.1.1
# Switch user to become root
USER 0
# Additional software
RUN cd &amp;amp;&amp;amp; \
set -x &amp;amp;&amp;amp; \
dnf install -y nmap-ncat htop &amp;amp;&amp;amp; \
dnf clean all
# Ansible venv additional dependencies
RUN cd &amp;amp;&amp;amp; \
source /var/lib/awx/venv/ansible/bin/activate &amp;amp;&amp;amp; \
umask 0022 &amp;amp;&amp;amp; \
pip install --upgrade pypsrp pysocks &amp;amp;&amp;amp; \
deactivate
# Restore the original user
# https://github.com/ansible/awx/blob/devel/installer/roles/image_build/templates/Dockerfile.task.j2
USER 1000
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2020/01/configurar-microk8s-para-usar-repositorios-de-aws-ecr/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Monitorizar memoria y errores de funciones Lambda</title><link>https://blog.okelet.com/post/2019/09/monitorizar-memoria-y-errores-de-funciones-lambda/</link><pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/09/monitorizar-memoria-y-errores-de-funciones-lambda/</guid><description>
&lt;p>A la hora de monitorizar estadísticas sobre la ejecución de nuestras funciones Lambda, Cloudwatch ya nos ofrece algunas &lt;em>builtin&lt;/em> como:&lt;/p>
&lt;ul>
&lt;li>Cantidad de &lt;em>throttles&lt;/em>&lt;/li>
&lt;li>Número de invocaciones&lt;/li>
&lt;li>Número de errores &amp;ldquo;genéricos&amp;rdquo;&lt;/li>
&lt;li>Duración (media y total)&lt;/li>
&lt;/ul>
&lt;p>Pero si queremos ver estadísticas sobre memoria o errores según sean por consumo excesivo de memoria o por timeout, no los tenemos disponibles por defecto.&lt;/p>
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/09/monitorizar-memoria-y-errores-de-funciones-lambda/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Usando caddy para desarollo local en PHP</title><link>https://blog.okelet.com/post/2019/07/usando-caddy-para-desarollo-local-en-php/</link><pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/07/usando-caddy-para-desarollo-local-en-php/</guid><description>
&lt;p>Durante el desarrollo en local de nuestra aplicación en PHP (con el framework
&lt;a href="https://cakephp.org/" target="_blank" rel="noopener">CakePHP&lt;/a>) solíamos usar el servidor que venía por defecto:&lt;/p>
&lt;pre>&lt;code class="language-bash">bin/cake server
&lt;/code>&lt;/pre>
&lt;p>El problema de esto (que por debajo usa el
&lt;a href="https://www.php.net/manual/en/features.commandline.webserver.php" target="_blank" rel="noopener">servidor &lt;em>embedido&lt;/em> de PHP&lt;/a>), es que es mono-hilo, es decir, que sirve sólo una petición a la vez, por lo que a veces la carga de la web se hacía bastante pesada.&lt;/p>
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/07/usando-caddy-para-desarollo-local-en-php/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Crear usuario y base de datos en Postgres y dar permisos</title><link>https://blog.okelet.com/post/2019/06/crear-usuario-y-base-de-datos-en-postgres-y-dar-permisos/</link><pubDate>Sun, 23 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/06/crear-usuario-y-base-de-datos-en-postgres-y-dar-permisos/</guid><description>
&lt;p>Una cosa que siempre se me olvida y tengo que buscar (como con
&lt;a href="https://blog.okelet.com/post/2019/06/crear-usuario-y-base-de-datos-en-mysql-y-dar-permisos/">MySQL&lt;/a>): cómo crear un usuario en Postgres, crear una base de datos, y dar permisos al usuario sobre esa base de datos:&lt;/p>
&lt;pre>&lt;code class="language-bash">psql -U postgres
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-sql">create database mydb ENCODING 'UTF8';
create user myuser with encrypted password 'mypass';
grant all privileges on database mydb to myuser;
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/06/crear-usuario-y-base-de-datos-en-postgres-y-dar-permisos/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Probando Ansible AWX con MicroK8s</title><link>https://blog.okelet.com/post/2019/06/probando-ansible-awx-con-microk8s/</link><pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/06/probando-ansible-awx-con-microk8s/</guid><description>
&lt;p>AVISO: Post largo (intro a Ansible, AWX, MicroK8s)&lt;/p>
&lt;p>Actualización 2020-01-14: Actualizado a
&lt;a href="https://groups.google.com/forum/#!topic/awx-project/aYYtuAuHMzY" target="_blank" rel="noopener">Ansible AWX 9.1.1&lt;/a>&lt;/p>
&lt;p>Ansible (&lt;em>/ánsibol/&lt;/em>) es el gestor de configuración de moda, y por méritos propios. Aunque no es perfecto (en determinadas ocasiones se puede preferir un modelo cliente/servidor en lugar de una conexión SSH &lt;em>ad-hoc&lt;/em>), ofrece una buena combinación entre funcionalidad y simplicidad. Siempre y cuando tengamos conectividad SSH con la máquina a gestionar (o no, a través de
&lt;a href="https://docs.aws.amazon.com/es_es/quickstart/latest/linux-bastion/architecture.html" target="_blank" rel="noopener">bastiones&lt;/a>), en el caso de equipos Linux, o conectividad WinRM o o PSRP para equipos Windows, podremos realizar infinidad de acciones o tareas sobre las máquinas a gestionar.&lt;/p>
&lt;p>Uno de los problemas de Ansible (hablando correctamente,
&lt;a href="https://www.ansible.com/blog/red-hat-ansible-automation-engine-vs-tower" target="_blank" rel="noopener">Ansible Engine&lt;/a>) es que no tiene una forma de ejecutar de forma automatizada playbooks, para mantener la configuración sincronizada de forma periódica, ejecutar tareas planificadas o incluso auto-provisionar equipos. Aquí es donde entra Ansible Tower, que es la versión con soporte de
&lt;a href="https://github.com/ansible/awx" target="_blank" rel="noopener">Ansible AWX&lt;/a>, al estilo de lo que Red Hat hace con Wildfly y JBoss. Ansible Tower/AWX en básicamente una API REST con una interfaz web que se comunica con ella. Utilizando esta API, se pueden definir inventarios, credenciales, equipos, plantillas de trabajo, flujos de trabajo, etc. así como asignar permisos por usarios/grupos mediante su sistema RBAC.&lt;/p>
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/06/probando-ansible-awx-con-microk8s/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Crear un rol personalizado en Google Cloud para encendido y apagado de máquinas</title><link>https://blog.okelet.com/post/2019/06/crear-un-rol-personalizado-en-google-cloud-para-encendido-y-apagado-de-maquinas/</link><pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/06/crear-un-rol-personalizado-en-google-cloud-para-encendido-y-apagado-de-maquinas/</guid><description>
&lt;p>Es posible que queramos delegar ciertas tareas de administración sobre elementos de Google
Cloud a usuarios o departamentos, y que no existan roles predefinidos que hagan exactamente
lo que necesitamos. Para eso están los roles personalizados, similar a las políticas de IAM
de AWS.&lt;/p>
&lt;p>Por ejemplo, para crear un rol que permita a un usuario apagar, encender y reinicar máquinas
virtuales, podemos crear un rol como el siguiente:&lt;/p>
&lt;pre>&lt;code class="language-bash">gcloud iam roles create StartStopVms --project ${GOOGLE_CLOUD_PROJECT} \
--title StartStopVms --description &amp;quot;Can start, stop, suspend, resume and reset VMs&amp;quot; \
--stage GA --permissions compute.instances.start,compute.instances.stop,compute.instances.suspend,compute.instances.resume,compute.instances.reset
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/06/crear-un-rol-personalizado-en-google-cloud-para-encendido-y-apagado-de-maquinas/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Python es el lenguaje más popular hoy por hoy</title><link>https://blog.okelet.com/post/2019/06/python-es-el-lenguaje-mas-popular-hoy-por-hoy/</link><pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/06/python-es-el-lenguaje-mas-popular-hoy-por-hoy/</guid><description>
Existe una medida, llamada índice TIOBE, que valora qué lenguajes de programación son más populares. Los datos salen de los foros de discusión técnicos en donde se observan cuantos internautas cambian impresiones sobre los diferentes lenguajes de programación. Ahora, en junio, el índica TIOBE ha sido publicado y revela que Python es el lenguaje más popular.
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/06/python-es-el-lenguaje-mas-popular-hoy-por-hoy/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Crear custom runtime para PHP en AWS Lambda</title><link>https://blog.okelet.com/post/2019/06/crear-custom-runtime-para-php-en-aws-lambda/</link><pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/06/crear-custom-runtime-para-php-en-aws-lambda/</guid><description>
&lt;p>Actualización 2019-06-27: Añadida extensión para MongoDB.&lt;/p>
&lt;p>En el proyecto que estamos desarrollando, tenemos algunas funciones Lambda en Python, con las que no tenemos problemas (por ahora); las dependencias de estas funciones Python las gestionamos con
&lt;a href="https://docs.pipenv.org/en/latest/" target="_blank" rel="noopener">pipenv&lt;/a>.&lt;/p>
&lt;p>Pero dado que el frontend está desarrollado en PHP, hay veces que necesitamos acceder a determinadas propiedades y funciones desde las funciones Lambda, y nos planteamos migrar o desarrollar nuevas funciones Lambda en PHP. Esto no era posible hasta que hace unos meses, AWS anunció el soporte de
&lt;a href="https://aws.amazon.com/es/blogs/apn/aws-lambda-custom-runtime-for-php-a-practical-example/" target="_blank" rel="noopener">&lt;em>custom runtimes&lt;/em>&lt;/a>, que básicamente consiste en subir el ejecutable con un determinado nombre.&lt;/p>
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/06/crear-custom-runtime-para-php-en-aws-lambda/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Crear usuario y base de datos en MySQL y dar permisos</title><link>https://blog.okelet.com/post/2019/06/crear-usuario-y-base-de-datos-en-mysql-y-dar-permisos/</link><pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/06/crear-usuario-y-base-de-datos-en-mysql-y-dar-permisos/</guid><description>
&lt;p>Una cosa que siempre se me olvida y tengo que buscar: cómo crear un usuario en MySQL (o MariaDB o Aurora MySQL), crear una base de datos, y dar permisos al usuario sobre esa base de datos:&lt;/p>
&lt;pre>&lt;code class="language-sql">CREATE DATABASE wordpress CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER 'wpuser'@'localhost' IDENTIFIED BY 'pickApassword';
GRANT ALL PRIVILEGES ON wordpress.* TO 'wpuser'@'localhost';
FLUSH PRIVILEGES;
exit
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/06/crear-usuario-y-base-de-datos-en-mysql-y-dar-permisos/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Parsear MaintenanceWindow de RDS en Python</title><link>https://blog.okelet.com/post/2019/05/parsear-maintenancewindow-de-rds-en-python/</link><pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/05/parsear-maintenancewindow-de-rds-en-python/</guid><description>
&lt;p>Para una aplicación que estamos desarrollando, necesitábamos saber cuándo se van a aplicar los mantenimientos en nuestras instancias de RDS. El problema es que según
&lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/rds.html#RDS.Client.describe_pending_maintenance_actions" target="_blank" rel="noopener">la documentación de Boto3&lt;/a>, el método &lt;code>describe_pending_maintenance_actions&lt;/code> devuelve la fecha de aplicación de la actualización en el campo &lt;code>CurrentApplyDate&lt;/code>, pero esto siempre viene vacío:&lt;/p>
&lt;pre>&lt;code class="language-bash">$ aws rds describe-pending-maintenance-actions
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/05/parsear-maintenancewindow-de-rds-en-python/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Contacto</title><link>https://blog.okelet.com/contact/</link><pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/contact/</guid><description>
Formulario de contacto
&lt;p>&lt;a href="https://blog.okelet.com/contact/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Proyectos...</title><link>https://blog.okelet.com/projects/</link><pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/projects/</guid><description>
ProxyChanger: Pequeña utilidad en Go para cambiar el proxy del sistema. MiniDLNA Indicator: Indicador para usar MiniDLNA como un usuario normal (sin root). [Abandonado] - chphpass (TBD): interfaz web para el cambio de contraseña en Samba4 y Active Directory. [Abandonado] - GCM Connection Manager (TBD): gestor de conexiones SSH (fork de Gnome Connection Manager)
&lt;p>&lt;a href="https://blog.okelet.com/projects/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Instalar Ansible en Cygwin</title><link>https://blog.okelet.com/post/2016/04/instalar-ansible-en-cygwin/</link><pubDate>Sat, 30 Apr 2016 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2016/04/instalar-ansible-en-cygwin/</guid><description>
&lt;p>Instalaremos Cygwin de la forma habitual; simplemente nos aseguraremos de seleccionar el paquete &lt;code>wget&lt;/code> en la ventana de selección de paquetes, o bien lanzar el instalador con el siguiente comando:&lt;/p>
&lt;pre>&lt;code class="language-bash">setup-x86_64.exe --download --site http://mirrors.fe.up.pt/pub/cygwin/ --upgrade-also --no-admin --root %LOCALAPPDATA%/cygwin64 --packages wget
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2016/04/instalar-ansible-en-cygwin/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Enviar salida éstandar y de error al mismo tiempo</title><link>https://blog.okelet.com/post/2016/04/enviar-salida-estandar-y-de-error-al-mismo-tiempo/</link><pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2016/04/enviar-salida-estandar-y-de-error-al-mismo-tiempo/</guid><description>
&lt;p>Normalmente, en Bash, redirigimos la salida estándar a un fichero o la entrada de otro comando con la siguiente sintaxis:&lt;/p>
&lt;pre>&lt;code class="language-bash">ls -l mifichero.txt noexiste &amp;gt; salida.txt
ls -l mifichero.txt noexiste | tee salida.txt
&lt;/code>&lt;/pre>
&lt;p>Y la salida de error así:&lt;/p>
&lt;pre>&lt;code class="language-bash">ls -l mifichero.txt noexiste 2&amp;gt; salida.txt
ls -l mifichero.txt noexiste 2&amp;gt;&amp;amp;1 &amp;gt;/dev/null | tee salida.txt
&lt;/code>&lt;/pre>
&lt;p>Podemos redirigir la salida estándar y de error al mismo tiempo:&lt;/p>
&lt;pre>&lt;code class="language-bash">ls -l mifichero.txt noexiste &amp;gt; salida.txt 2&amp;gt;&amp;amp;1
ls -l mifichero.txt noexiste 2&amp;gt;&amp;amp;1 | tee salida.txt
&lt;/code>&lt;/pre>
&lt;p>O de esta otra forma más simplificada (&lt;code>&amp;amp;|&lt;/code> no funciona):&lt;/p>
&lt;pre>&lt;code class="language-bash">ls -l mifichero.txt noexiste &amp;amp;&amp;gt; salida.txt
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2016/04/enviar-salida-estandar-y-de-error-al-mismo-tiempo/">Leer más...&lt;/a>&lt;/p></description></item><item><title>La forma más corta y simple de crear o vaciar un archivo en Linux</title><link>https://blog.okelet.com/post/2016/04/la-forma-mas-corta-y-simple-de-crear-o-vaciar-un-archivo-en-linux/</link><pubDate>Tue, 19 Apr 2016 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2016/04/la-forma-mas-corta-y-simple-de-crear-o-vaciar-un-archivo-en-linux/</guid><description>
&lt;p>Pues eso, la forma más corta y simple de crear o vaciar un archivo en Linux:&lt;/p>
&lt;pre>&lt;code class="language-bash">&amp;gt; fichero
&lt;/code>&lt;/pre>
&lt;p>Otras formas:&lt;/p>
&lt;pre>&lt;code class="language-bash">touch fichero
echo &amp;quot;&amp;quot; &amp;gt; fichero
cat /dev/null &amp;gt; fichero
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2016/04/la-forma-mas-corta-y-simple-de-crear-o-vaciar-un-archivo-en-linux/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Ansible sin root</title><link>https://blog.okelet.com/post/2016/04/ansible-sin-root/</link><pubDate>Tue, 05 Apr 2016 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2016/04/ansible-sin-root/</guid><description>
&lt;p>Cuando se instala Ansible, por defecto va a usar la configuración y fichero de hosts del directorio &lt;code>/etc/ansible&lt;/code>. Si queremos poder ejecutar Ansible sin necesidad de estar tocando continuamente ficheros de configuración con root, podemos crear un archivo de configuración y otro de hosts en nuestro directorio personal, que prevalecerán sobre los que hay en &lt;code>/etc/ansible&lt;/code>.&lt;/p>
&lt;p>Para ello, crearemos el
&lt;a href="http://docs.ansible.com/ansible/intro_configuration.html#configuration-file" target="_blank" rel="noopener">fichero de configuración&lt;/a> &lt;code>~/.ansible.cfg&lt;/code> con el siguiente contenido:&lt;/p>
&lt;pre>&lt;code class="language-text">[defaults]
inventory = ~/.ansible_hosts
&lt;/code>&lt;/pre>
&lt;p>Y tras esto, crear el
&lt;a href="http://docs.ansible.com/ansible/intro_inventory.html" target="_blank" rel="noopener">archivo de hosts&lt;/a> al que hacemos referencia:&lt;/p>
&lt;pre>&lt;code class="language-text">localhost
&lt;/code>&lt;/pre>
&lt;p>Para probar que Ansible está cogiendo esta configuración, ejecutaremos el siguiente comando (muestra los
&lt;a href="http://docs.ansible.com/ansible/intro_inventory.html" target="_blank" rel="noopener">&lt;code>facts&lt;/code> del servidor&lt;/a> que cumplan el filtro &lt;code>ansible_eth[0-2]&lt;/code>):&lt;/p>
&lt;pre>&lt;code class="language-bash">ansible localhost -m setup -a 'filter=ansible_eth[0-2]'
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2016/04/ansible-sin-root/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Instalar OpenStack PackStack detrás de un proxy</title><link>https://blog.okelet.com/post/2016/02/instalar-openstack-packstack-detras-de-un-proxy/</link><pubDate>Thu, 18 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2016/02/instalar-openstack-packstack-detras-de-un-proxy/</guid><description>
&lt;p>Trasteando con Openstack, con ganas desde hace tiempo, y después de la
&lt;a href="http://www.meetup.com/es-ES/MAD-for-OpenStack/events/227554166/" target="_blank" rel="noopener">Mini-Conf&lt;/a> del grupo
&lt;a href="http://www.meetup.com/es-ES/MAD-for-OpenStack/" target="_blank" rel="noopener">MAD for OpenStack&lt;/a>, me animé a probarlo usando
&lt;a href="https://wiki.openstack.org/wiki/Packstack" target="_blank" rel="noopener">PackStack&lt;/a>, que te lo configura todo en una única máquina (no tengo claro si se puede considerar una instalación productiva o sólo para pruebas), aunque luego puedes ir añadiendo nodos adicionales. Dado que no tengo acceso a ningún host físico, instalé un RH 7.2 (también vale
&lt;a href="https://getfedora.org" target="_blank" rel="noopener">Fedora&lt;/a> o
&lt;a href="https://www.centos.org" target="_blank" rel="noopener">CentOS&lt;/a>) en una máquina virtual de VMware (el rendimiento dependerá en gran medida si se tiene habilitado o no la &lt;em>
&lt;a href="http://www.josemariagonzalez.es/2012/10/01/como-virtualizar-un-vmware-esxi-en-modo-nested.html" target="_blank" rel="noopener">nested virtualization&lt;/a>&lt;/em>). Empecé con una máquina con 2 procesadores y 2 GB de RAM, pero enseguida me di cuenta que se quedaba muy corta, incluso sin ninguna instancia arrancada. La versión final tiene 8 procesadores y 8 GB de RAM.&lt;/p>
&lt;p>&lt;a href="https://blog.okelet.com/post/2016/02/instalar-openstack-packstack-detras-de-un-proxy/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Red Hat, licencias y suscripciones (y una pequeña reflexión sobre el software libre)</title><link>https://blog.okelet.com/post/2014/09/red-hat-licencias-y-suscripciones-y-una-pequena-reflexion-sobre-el-software-libre/</link><pubDate>Tue, 23 Sep 2014 10:54:17 +0000</pubDate><guid>https://blog.okelet.com/post/2014/09/red-hat-licencias-y-suscripciones-y-una-pequena-reflexion-sobre-el-software-libre/</guid><description>
&lt;p>&lt;em>Nota&lt;/em>: No soy un experto en licencias o suscripciones, así que todo lo que diga en este post, no se debe tomar al pie de la letra. Si algún concepto está mal, comentádmelo y lo corrijo.&lt;/p>
&lt;p>En un anterior cliente (de cuyo nombre no quiero acordarme), supongo que al igual que en muchos otros que os habréis encontrado, tienen la mala costumbre de instalar software sin licencia o suscripción. En este caso, voy a hablar de Red Hat, y su distribución Linux (Red Hat Enterprise Linux o RHEL). Aunque GNU/Linux siempre se ha caracterizado por sus licencias abiertas, quien modifique dicho software está obligado a publicar dicho fuente modificado (realmente depende de la licencia de cada pieza software que compone la distribución, pero aunque no se deba en general, en este post generalizaremos&amp;hellip;). Éste es, en parte, el negocio de Red Hat. Ellos hace una recopilación de software, le hacen una serie de modificacionesy mejoras si procede, publican ese código fuente (
&lt;a href="http://ftp.redhat.com/pub/redhat/linux/enterprise/" target="_blank" rel="noopener">SRPMs&lt;/a>), y finalmente generar unos binarios que los meten en un CD, además de dar actualizaciones y soporte de ese software. ¿Y qué es lo que pasa? Pues esos CDs &amp;ldquo;no te los puedes bajar gratis&amp;rdquo; (dependiendo de la licencia se puede permitir cobrar por el trabajo realizado, o incluso no liberar las modificaciones hechas). Esos CDs sólo los puedes conseguir si tienes una suscripción con Red Hat (previo pago), o bien si te has registrado para una evaluación. Esta demo incluye lo siguiente:&lt;/p>
&lt;ul>
&lt;li>Actualizaciones durante 30 días&lt;/li>
&lt;li>NO se incluye soporte técnico&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://blog.okelet.com/post/2014/09/red-hat-licencias-y-suscripciones-y-una-pequena-reflexion-sobre-el-software-libre/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Compilar NXLOG en Red Hat/CentOS 5</title><link>https://blog.okelet.com/post/2014/09/compilar-nxlog-en-red-hatcentos-5/</link><pubDate>Mon, 15 Sep 2014 14:24:26 +0000</pubDate><guid>https://blog.okelet.com/post/2014/09/compilar-nxlog-en-red-hatcentos-5/</guid><description>
&lt;p>
&lt;a href="http://nxlog-ce.sourceforge.net" target="_blank" rel="noopener">NXLOG&lt;/a> es un sustituto revitalizado para
&lt;a href="http://es.wikipedia.org/wiki/Syslog" target="_blank" rel="noopener">Syslog&lt;/a>. Puede recoger los mensajes tanto desde Windows como de Linux, aplicar reglas, y luego enviarlo a distintos sitios (archivos, bases de datos, servicios web, etc.). El caso es que necesitaba instalar este paquete en un CentOS 5 para enviar los LOGs a un servicio web de indexación, pero no había paquetes precompilados para esta versión.&lt;/p>
&lt;p>&lt;a href="https://blog.okelet.com/post/2014/09/compilar-nxlog-en-red-hatcentos-5/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Guía rápida de KVM</title><link>https://blog.okelet.com/post/2014/08/guia-rapida-de-kvm/</link><pubDate>Tue, 12 Aug 2014 13:12:48 +0200</pubDate><guid>https://blog.okelet.com/post/2014/08/guia-rapida-de-kvm/</guid><description>
&lt;p>De la
&lt;a href="http://es.wikipedia.org/wiki/Kernel-based_Virtual_Machine" target="_blank" rel="noopener">Wikipedia&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Kernel-based Virtual Machine o KVM, (en español, Máquina virtual basada en el núcleo) es una solución para implementar virtualización completa con Linux. Está formada por un módulo del núcleo (con el nombre kvm.ko) y herramientas en el espacio de usuario, siendo en su totalidad software libre. El componente KVM para el núcleo está incluido en Linux desde la versión 2.6.20.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>KVM permite ejecutar máquinas virtuales utilizando imágenes de disco que contienen sistemas operativos sin modificar. Cada máquina virtual tiene su propio hardware virtualizado: una tarjeta de red, discos duros, tarjeta gráfica, etc.&lt;/p>
&lt;/blockquote>
&lt;p>En primer lugar, debemos comprobar si nuestro equipo es compatible con KVM:&lt;/p>
&lt;pre>&lt;code class="language-bash">egrep --color '(svm|vmx)' /proc/cpuinfo
&lt;/code>&lt;/pre>
&lt;p>Si la salida anterior muestra algo, podremos seguir adelante. Si no muestra nada, también podremos seguir, pero no se aprovecharán las capacidades de virtualización del equipo (se hará un
&lt;a href="http://blog.vmsplice.net/2011/03/should-i-use-qemu-or-kvm.html" target="_blank" rel="noopener">&lt;em>fallback&lt;/em>&lt;/a> a emulación en lugar de virtualización).&lt;/p>
&lt;p>&lt;a href="https://blog.okelet.com/post/2014/08/guia-rapida-de-kvm/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Red NAT privada con salida al exterior en VirtualBox</title><link>https://blog.okelet.com/post/2014/08/red-nat-privada-con-salida-al-exterior-en-virtualbox/</link><pubDate>Thu, 07 Aug 2014 13:49:59 +0200</pubDate><guid>https://blog.okelet.com/post/2014/08/red-nat-privada-con-salida-al-exterior-en-virtualbox/</guid><description>
&lt;p>Una de las cosas que más echo en falta en
&lt;a href="https://www.virtualbox.org" target="_blank" rel="noopener">VirtualBox&lt;/a> con respecto a cuando trabajaba con
&lt;a href="http://www.vmware.com/es/products/workstation" target="_blank" rel="noopener">VMware Workstation&lt;/a> o
&lt;a href="http://www.vmware.com/es/products/player" target="_blank" rel="noopener">Player&lt;/a>, al trabajar una máquina local para hacer pruebas, es que estas últimas te creaban varios tipos de redes por defecto que VirtualBox no hace. La más útil para mi, sobre todo cuando estás en un cliente en el que es difícil solicitar IPs o cuando quieres crear una red interna de pruebas, es crear una
&lt;a href="https://www.vmware.com/support/ws3/doc/ws32_network21.html" target="_blank" rel="noopener">red privada de la que formen parte tanto las máquinas virtuales como la propia máquina anfitriona, y que tenga salida al exterior mediante NAT&lt;/a>.&lt;/p>
&lt;p>&lt;a href="https://blog.okelet.com/post/2014/08/red-nat-privada-con-salida-al-exterior-en-virtualbox/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Instalar, configurar y securizar MariaDB</title><link>https://blog.okelet.com/post/2014/08/instalar-configurar-y-securizar-mariadb/</link><pubDate>Thu, 07 Aug 2014 13:49:42 +0200</pubDate><guid>https://blog.okelet.com/post/2014/08/instalar-configurar-y-securizar-mariadb/</guid><description>
&lt;p>La página de
&lt;a href="http://www.ibm.com/developerworks" target="_blank" rel="noopener">IBM developerWorks&lt;/a> no para de sorprenderme. Muchas de las veces que busco documentación técnica, cursos, tutoriales, etc. allí están ellos, y con un material gratuito y de muy alta calidad. La última, fue con la instalación de este blog. Tengo un VPS contratado con Ubuntu, que he ido actualizando poco a poco, y que lo tengo bastante pelado. Me decidí por instalar en él WordPress (tras mucho analizar otros sistemas para publicar artículos tipo
&lt;a href="http://dokuwiki.org" target="_blank" rel="noopener">Dokuwiki&lt;/a>,
&lt;a href="http://octopress.org" target="_blank" rel="noopener">Octopress&lt;/a>,
&lt;a href="http://jekyllrb.com" target="_blank" rel="noopener">Jekyll&lt;/a>,
&lt;a href="http://getpelican.com" target="_blank" rel="noopener">Pelican&lt;/a>, etc.). Lo primero que me sorprendió es que no soporta
&lt;a href="http://www.postgresql.org" target="_blank" rel="noopener">PostgreSQL&lt;/a> de forma oficial (que sería mi primera opción), por mis
&lt;a href="http://techcrunch.com/2012/08/18/oracle-makes-more-moves-to-kill-open-source-mysql" target="_blank" rel="noopener">reticencias con MySQL&lt;/a>, pero más tarde de acordé del fork que se creó hace un tiempo, llamado
&lt;a href="http://mariadb.org" target="_blank" rel="noopener">MariaDB&lt;/a>. Leyendo un poco, parece ser que MariaDB es &amp;ldquo;binariamente&amp;rdquo; (si es que eso existe en castellano)
&lt;a href="https://mariadb.com/kb/en/mariadb/mariadb-vs-mysql-compatibility" target="_blank" rel="noopener">compatible con MySQL&lt;/a> (es decir, que el protocolo de comunicación, los ficheros de base de datos, etc. son totalmente compatibles, si no iguales).&lt;/p>
&lt;p>&lt;a href="https://blog.okelet.com/post/2014/08/instalar-configurar-y-securizar-mariadb/">Leer más...&lt;/a>&lt;/p></description></item></channel></rss>