<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python | Notas de Cloud y DevOps</title><link>https://blog.okelet.com/tags/python/</link><atom:link href="https://blog.okelet.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><description>Python</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>es-ES</language><copyright>[CC BY-SA](https://creativecommons.org/licenses/by-sa/3.0/) Juan A. S. 2020</copyright><lastBuildDate>Tue, 25 Feb 2020 00:00:00 +0000</lastBuildDate><image><url>img/map[gravatar:%!s(bool=false) shape:circle]</url><title>Python</title><link>https://blog.okelet.com/tags/python/</link></image><item><title>Instalación y configuración de Windows Terminal y Powershell</title><link>https://blog.okelet.com/post/2020/02/instalacion-y-configuracion-de-windows-terminal-y-powershell/</link><pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2020/02/instalacion-y-configuracion-de-windows-terminal-y-powershell/</guid><description>
&lt;p>Microsoft se está poniendo un poco las pilas, y entre otros muchos proyectos, lanzó hace unos meses
&lt;a href="https://github.com/microsoft/terminal" target="_blank" rel="noopener">Windows Terminal&lt;/a>, una nueva terminal en Windows con unas funcionalidades que eran necesarias desde hace mucho tiempo (pestañas, perfiles, integración con WSL, soporte Unicode y UTF-8, temas, estilos, etc.).&lt;/p>
&lt;p>Aunque no uso mucho Windows, en ocasiones tengo que iniciarlo, y determinadas tareas de consola se hacen bastante pesadas. Con Windows Terminal, la verdad es que la sensación a la hora de trabajar es bastante cómoda. Por eso, he decidido crear este post para futuras referencias, así como con instrucciones para instalar utilidades útiles a la hora de usar Windows Terminal.&lt;/p>
&lt;p>En primer lugar, para instalar Windows Terminal, simplemente ejecutaremos este comando desde una consola de Powershell estándar, con permisos de administrador (teniendo
&lt;a href="https://chocolatey.org/" target="_blank" rel="noopener">el gestor de paquetes Chocolatey&lt;/a> instalado previamente):&lt;/p>
&lt;pre>&lt;code class="language-powershell">choco install microsoft-windows-terminal
&lt;/code>&lt;/pre>
&lt;p>Como alternativa, si no podemos instalar Windows Terminal porque el sistema no cumple los requisitos (es necesaria una compilación de Windows Windows 10 1903, build 18362, o posterior), podemos optar por usar
&lt;a href="https://conemu.github.io/" target="_blank" rel="noopener">ConEmu&lt;/a> o
&lt;a href="https://cmder.net/" target="_blank" rel="noopener">Cmder&lt;/a>:&lt;/p>
&lt;pre>&lt;code class="language-powershell">choco install conemu
choco install cmder
&lt;/code>&lt;/pre>
&lt;p>También instalaremos
&lt;a href="https://github.com/gerardog/gsudo" target="_blank" rel="noopener">gsudo&lt;/a>, que será necesario en pasos posteriores:&lt;/p>
&lt;pre>&lt;code class="language-powershell">choco install gsudo
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2020/02/instalacion-y-configuracion-de-windows-terminal-y-powershell/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Python es el lenguaje más popular hoy por hoy</title><link>https://blog.okelet.com/post/2019/06/python-es-el-lenguaje-mas-popular-hoy-por-hoy/</link><pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/06/python-es-el-lenguaje-mas-popular-hoy-por-hoy/</guid><description>
Existe una medida, llamada índice TIOBE, que valora qué lenguajes de programación son más populares. Los datos salen de los foros de discusión técnicos en donde se observan cuantos internautas cambian impresiones sobre los diferentes lenguajes de programación. Ahora, en junio, el índica TIOBE ha sido publicado y revela que Python es el lenguaje más popular.
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/06/python-es-el-lenguaje-mas-popular-hoy-por-hoy/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Parsear MaintenanceWindow de RDS en Python</title><link>https://blog.okelet.com/post/2019/05/parsear-maintenancewindow-de-rds-en-python/</link><pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/05/parsear-maintenancewindow-de-rds-en-python/</guid><description>
&lt;p>Para una aplicación que estamos desarrollando, necesitábamos saber cuándo se van a aplicar los mantenimientos en nuestras instancias de RDS. El problema es que según
&lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/rds.html#RDS.Client.describe_pending_maintenance_actions" target="_blank" rel="noopener">la documentación de Boto3&lt;/a>, el método &lt;code>describe_pending_maintenance_actions&lt;/code> devuelve la fecha de aplicación de la actualización en el campo &lt;code>CurrentApplyDate&lt;/code>, pero esto siempre viene vacío:&lt;/p>
&lt;pre>&lt;code class="language-bash">$ aws rds describe-pending-maintenance-actions
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/05/parsear-maintenancewindow-de-rds-en-python/">Leer más...&lt;/a>&lt;/p></description></item></channel></rss>