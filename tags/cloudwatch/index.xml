<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloudwatch on
Mis notas</title><link>https://okelet.netlify.com/tags/cloudwatch/</link><description>Recent content in Cloudwatch
on Mis notas</description><language>es</language><managingEditor>okelet@gmail.com (Juan Asensio)</managingEditor><webMaster>okelet@gmail.com (Juan Asensio)</webMaster><lastBuildDate>Tue, 11 Feb 2020 13:25:52 +0000</lastBuildDate><generator>Hugo -- gohugo.io</generator><docs>https://validator.w3.org/feed/docs/rss2.html</docs><atom:link href="https://okelet.netlify.com/tags/cloudwatch/index.xml" rel="self" type="application/rss+xml"/><item><title>Monitorizar memoria y errores de funciones Lambda</title><link>https://okelet.netlify.com/posts/2019/09/monitorizar-memoria-y-errores-de-funciones-lambda/</link><description>&lt;p>A la hora de monitorizar estadísticas sobre la ejecución de nuestras funciones Lambda, Cloudwatch ya nos ofrece algunas &lt;em>builtin&lt;/em> como:&lt;/p>
&lt;ul>
&lt;li>Cantidad de &lt;em>throttles&lt;/em>&lt;/li>
&lt;li>Número de invocaciones&lt;/li>
&lt;li>Número de errores &amp;ldquo;genéricos&amp;rdquo;&lt;/li>
&lt;li>Duración (media y total)&lt;/li>
&lt;/ul>
&lt;p>Pero si queremos ver estadísticas sobre memoria o errores según sean por consumo excesivo de memoria o por timeout, no los tenemos disponibles por defecto.&lt;/p>
&lt;p>Para conseguir información de este tipo de errores, tendremos que recurrir a crear &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/MonitoringPolicyExamples.html">filtros de métricas (&lt;em>metric filters&lt;/em>)&lt;/a> de los LOGs que deja Lambda en Cloudwatch. Por ejemplo, con el siguiente script, recorremos todas los grupos de LOGs de Lambda (aquellos que empiezan por &lt;code>/aws/lambda/&lt;/code>) y creamos unas cuantas métricas en cada uno de ellos, para poder después obtener estadísticas:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1"># Based on https://gist.github.com/sandfox/337129afa5555af6372d4eae536b20f0&lt;/span>
&lt;span class="nv">prefix&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/aws/lambda/&amp;#34;&lt;/span>
&lt;span class="k">for&lt;/span> log_group in &lt;span class="k">$(&lt;/span>aws logs describe-log-groups --log-group-name-prefix &lt;span class="nv">$prefix&lt;/span> --query &lt;span class="s2">&amp;#34;logGroups[].logGroupName&amp;#34;&lt;/span> --output text&lt;span class="k">)&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nv">fn_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">log_group&lt;/span>&lt;span class="p">#&lt;/span>&lt;span class="nv">$prefix&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span>
aws logs put-metric-filter &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --log-group-name &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$log_group&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --filter-name lambda-memory-usage &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --filter-pattern &lt;span class="s1">&amp;#39;[ x=&amp;#34;REPORT&amp;#34;, x=&amp;#34;RequestId:&amp;#34;, request_id, x=&amp;#34;Duration:&amp;#34;, duration, x=&amp;#34;ms&amp;#34;, x=&amp;#34;Billed&amp;#34;, x=&amp;#34;Duration:&amp;#34;, billed_duration, x=&amp;#34;ms&amp;#34;, x=&amp;#34;Memory&amp;#34;, x=&amp;#34;Size:&amp;#34;, memory_size, x=&amp;#34;MB&amp;#34;, x=&amp;#34;Max&amp;#34;, x=&amp;#34;Memory&amp;#34;, x=&amp;#34;Used:&amp;#34;, memory_used, x=&amp;#34;MB&amp;#34;]&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --metric-transformations &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s2">metricNamespace=Custom/Lambda,metricName=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">fn_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">-MemoryUsed,metricValue=\$memory_used&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
aws logs put-metric-filter &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --log-group-name &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$log_group&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --filter-name lambda-memory-size &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --filter-pattern &lt;span class="s1">&amp;#39;[ x=&amp;#34;REPORT&amp;#34;, x=&amp;#34;RequestId:&amp;#34;, request_id, x=&amp;#34;Duration:&amp;#34;, duration, x=&amp;#34;ms&amp;#34;, x=&amp;#34;Billed&amp;#34;, x=&amp;#34;Duration:&amp;#34;, billed_duration, x=&amp;#34;ms&amp;#34;, x=&amp;#34;Memory&amp;#34;, x=&amp;#34;Size:&amp;#34;, memory_size, x=&amp;#34;MB&amp;#34;, x=&amp;#34;Max&amp;#34;, x=&amp;#34;Memory&amp;#34;, x=&amp;#34;Used:&amp;#34;, memory_used, x=&amp;#34;MB&amp;#34;]&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --metric-transformations &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s2">metricNamespace=Custom/Lambda,metricName=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">fn_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">-MemorySize,metricValue=\$memory_size&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># Errores que se dan cuando la ejecución se pasa del máximo de memoria permitido&lt;/span>
aws logs put-metric-filter &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --log-group-name &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">log_group&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --filter-name lambda-memory-errors &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --filter-pattern &lt;span class="s1">&amp;#39;Process exited before completing request&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --metric-transformations &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s2">metricNamespace=Custom/Lambda,metricName=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">fn_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">-MemoryErrors,metricValue=1,defaultValue=0&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># Errores que se dan cuando la ejecución se pasa del máximo de tiempo permitido&lt;/span>
aws logs put-metric-filter &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --log-group-name &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">log_group&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --filter-name lambda-timeout-errors &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --filter-pattern &lt;span class="s1">&amp;#39;Task timed out after&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --metric-transformations &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s2">metricNamespace=Custom/Lambda,metricName=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">fn_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">-TimeoutErrors,metricValue=1,defaultValue=0&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Una vez creados, y pasados cierto tiempo para poder obtener datos, en la sección de métricas de Cloudwatch, tendremos una nueva categoría, &lt;code>Custom/Lambda&lt;/code>, donde tendremos el listado de nuevas métricas, por cada función Lambda:&lt;/p>
&lt;p>&lt;img src="cloudwatch_lambda_custom_namespace.png" alt="">&lt;/p>
&lt;p>Podremos seleccionar estas estadísticas para poder visualizar los datos en un gráfico:&lt;/p>
&lt;p>&lt;img src="cloudwatch_lambda_memory_used_graph.png" alt="">&lt;/p>
&lt;p>También podremos consultar estos datos desde la CLI:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">aws cloudwatch get-metric-statistics --namespace Custom/Lambda --metric-name my_function_name-MemoryUsed --start-time &lt;span class="k">$(&lt;/span>date --date &lt;span class="s2">&amp;#34;1 day ago&amp;#34;&lt;/span> +%s&lt;span class="k">)&lt;/span> --end-time &lt;span class="k">$(&lt;/span>date +%s&lt;span class="k">)&lt;/span> --period &lt;span class="m">300&lt;/span> --statistics Average
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Label&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;my_function_name-MemoryUsed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Datapoints&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2019-08-29T04:10:00Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Average&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">84.32894736842105&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;None&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2019-08-28T18:10:00Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Average&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">82.94736842105263&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;None&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2019-08-29T08:10:00Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Average&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">83.72368421052632&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;None&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2019-08-28T22:10:00Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Average&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">84.63157894736842&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;None&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2019-08-29T12:10:00Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Average&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">83.59210526315789&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;None&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2019-08-29T02:10:00Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Average&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">83.17105263157895&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;None&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2019-08-28T16:10:00Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Average&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">84.35526315789474&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;None&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2019-08-29T06:10:00Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Average&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">83.85526315789474&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;None&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2019-08-29T10:10:00Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Average&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">84.48684210526316&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;None&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2019-08-28T20:10:00Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Average&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">85.0657894736842&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;None&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2019-08-29T00:10:00Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Average&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">84.97368421052632&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;None&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;Timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2019-08-29T14:10:00Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Average&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">82.57894736842105&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;Unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;None&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description><category domain="https://okelet.netlify.com/tags/aws">AWS</category><category domain="https://okelet.netlify.com/tags/lambda">Lambda</category><category domain="https://okelet.netlify.com/tags/cloudwatch">Cloudwatch</category><guid>https://okelet.netlify.com/posts/2019/09/monitorizar-memoria-y-errores-de-funciones-lambda/</guid><pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate></item></channel></rss>