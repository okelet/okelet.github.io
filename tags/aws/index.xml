<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS | Notas de Cloud y DevOps</title><link>https://blog.okelet.com/tags/aws/</link><atom:link href="https://blog.okelet.com/tags/aws/index.xml" rel="self" type="application/rss+xml"/><description>AWS</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>es-ES</language><copyright>[CC BY-SA](https://creativecommons.org/licenses/by-sa/3.0/) Juan A. S. 2020</copyright><lastBuildDate>Thu, 13 Feb 2020 00:00:00 +0000</lastBuildDate><image><url>img/map[gravatar:%!s(bool=false) shape:circle]</url><title>AWS</title><link>https://blog.okelet.com/tags/aws/</link></image><item><title>Obtener la fecha de creación de las instancias de AWS EC2</title><link>https://blog.okelet.com/post/2020/02/obtener-la-fecha-de-creacion-de-las-instancias-de-aws-ec2/</link><pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2020/02/obtener-la-fecha-de-creacion-de-las-instancias-de-aws-ec2/</guid><description>
&lt;p>AWS, al listar las instancias de EC2, no devuelve ninguna propiedad que diga cuándo se creó una instancias; esto puede sernos útil en determinadas ocasiones. Podríamos pensar que nos podría valer la propiedad &amp;ldquo;LaunchTime&amp;rdquo;, pero eso en realidad nos indica cuándo se encendió por última vez la instancia, no cuándo se creó.&lt;/p>
&lt;p>Aunque directamente este dato no lo proporciona directamente AWS, podemos deducirlo indirectamente a través de otros parámetros:&lt;/p>
&lt;ul>
&lt;li>La fecha más antigua de vinculación de las tarjetas de red&lt;/li>
&lt;li>La fecha más antigua de vinculación de los discos&lt;/li>
&lt;/ul>
&lt;p>Esto debe ser válido, ya que por ejemplo,
&lt;a href="https://docs.amazonaws.cn/en_us/vpc/latest/userguide/VPC_ElasticNetworkInterfaces.html" target="_blank" rel="noopener">la tarjeta de red principal no se puede desvincular de la instancia&lt;/a> (&lt;span class="markup-quote">You cannot detach a primary network interface from an instance&lt;/span>), y su fecha de vinculación permanece siempre igual, aún entre reinicios. También suele ser válido que normalmente, el disco principal de una instancia no suele cambiar, aunque esto no siempre es cierto.&lt;/p>
&lt;p>Con estos datos, podemos lanzar una consulta de la CLI de AWS y mediante el parámetro &lt;code>query&lt;/code> (que es una expresión
&lt;a href="http://jmespath.org/" target="_blank" rel="noopener">JMESPath&lt;/a>), obtener dichos valores:&lt;/p>
&lt;pre>&lt;code class="language-bash">aws ec2 describe-instances --output table --query 'sort_by(Reservations[].Instances[?State.Name!=`terminated`][].{Name: Tags[?Key==`Name`].Value | [0], InstanceId: InstanceId, CreationTime: min([min(NetworkInterfaces[].Attachment.AttachTime), min(BlockDeviceMappings[].Ebs.AttachTime)]), State: State.Name, InstanceType: InstanceType, PublicIpAddress: PublicIpAddress, PrivateIpAddress: PrivateIpAddress}, &amp;amp;CreationTime)'
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2020/02/obtener-la-fecha-de-creacion-de-las-instancias-de-aws-ec2/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Monitorizar memoria y errores de funciones Lambda</title><link>https://blog.okelet.com/post/2019/09/monitorizar-memoria-y-errores-de-funciones-lambda/</link><pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/09/monitorizar-memoria-y-errores-de-funciones-lambda/</guid><description>
&lt;p>A la hora de monitorizar estadísticas sobre la ejecución de nuestras funciones Lambda, Cloudwatch ya nos ofrece algunas &lt;em>builtin&lt;/em> como:&lt;/p>
&lt;ul>
&lt;li>Cantidad de &lt;em>throttles&lt;/em>&lt;/li>
&lt;li>Número de invocaciones&lt;/li>
&lt;li>Número de errores &amp;ldquo;genéricos&amp;rdquo;&lt;/li>
&lt;li>Duración (media y total)&lt;/li>
&lt;/ul>
&lt;p>Pero si queremos ver estadísticas sobre memoria o errores según sean por consumo excesivo de memoria o por timeout, no los tenemos disponibles por defecto.&lt;/p>
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/09/monitorizar-memoria-y-errores-de-funciones-lambda/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Crear custom runtime para PHP en AWS Lambda</title><link>https://blog.okelet.com/post/2019/06/crear-custom-runtime-para-php-en-aws-lambda/</link><pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/06/crear-custom-runtime-para-php-en-aws-lambda/</guid><description>
&lt;p>Actualización 2019-06-27: Añadida extensión para MongoDB.&lt;/p>
&lt;p>En el proyecto que estamos desarrollando, tenemos algunas funciones Lambda en Python, con las que no tenemos problemas (por ahora); las dependencias de estas funciones Python las gestionamos con
&lt;a href="https://docs.pipenv.org/en/latest/" target="_blank" rel="noopener">pipenv&lt;/a>.&lt;/p>
&lt;p>Pero dado que el frontend está desarrollado en PHP, hay veces que necesitamos acceder a determinadas propiedades y funciones desde las funciones Lambda, y nos planteamos migrar o desarrollar nuevas funciones Lambda en PHP. Esto no era posible hasta que hace unos meses, AWS anunció el soporte de
&lt;a href="https://aws.amazon.com/es/blogs/apn/aws-lambda-custom-runtime-for-php-a-practical-example/" target="_blank" rel="noopener">&lt;em>custom runtimes&lt;/em>&lt;/a>, que básicamente consiste en subir el ejecutable con un determinado nombre.&lt;/p>
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/06/crear-custom-runtime-para-php-en-aws-lambda/">Leer más...&lt;/a>&lt;/p></description></item><item><title>Parsear MaintenanceWindow de RDS en Python</title><link>https://blog.okelet.com/post/2019/05/parsear-maintenancewindow-de-rds-en-python/</link><pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate><guid>https://blog.okelet.com/post/2019/05/parsear-maintenancewindow-de-rds-en-python/</guid><description>
&lt;p>Para una aplicación que estamos desarrollando, necesitábamos saber cuándo se van a aplicar los mantenimientos en nuestras instancias de RDS. El problema es que según
&lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/rds.html#RDS.Client.describe_pending_maintenance_actions" target="_blank" rel="noopener">la documentación de Boto3&lt;/a>, el método &lt;code>describe_pending_maintenance_actions&lt;/code> devuelve la fecha de aplicación de la actualización en el campo &lt;code>CurrentApplyDate&lt;/code>, pero esto siempre viene vacío:&lt;/p>
&lt;pre>&lt;code class="language-bash">$ aws rds describe-pending-maintenance-actions
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.okelet.com/post/2019/05/parsear-maintenancewindow-de-rds-en-python/">Leer más...&lt;/a>&lt;/p></description></item></channel></rss>